{% extends "base.twig" %}

{% block title %}Netmail - {{ parent() }}{% endblock %}

{% block content %}
<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-envelope"></i>
        Netmail
    </h2>
    <button class="btn btn-fidonet" onclick="composeMessage('netmail')">
        <i class="fas fa-plus"></i>
        Compose
    </button>
</div>

<div class="row">
    <div class="col-lg-9">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Messages</h6>
                    <div class="btn-group btn-group-sm" role="group">
                        <input type="radio" class="btn-check" name="filter" id="all" value="all" checked>
                        <label class="btn btn-outline-secondary" for="all">All</label>
                        
                        <input type="radio" class="btn-check" name="filter" id="unread" value="unread">
                        <label class="btn btn-outline-secondary" for="unread">Unread</label>
                        
                        <input type="radio" class="btn-check" name="filter" id="sent" value="sent">
                        <label class="btn btn-outline-secondary" for="sent">Sent</label>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <div id="messagesContainer">
                    <div class="loading-spinner">
                        <i class="fas fa-spinner fa-spin me-2"></i>
                        Loading messages...
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <nav id="pagination">
                    <!-- Pagination will be inserted here -->
                </nav>
            </div>
        </div>
    </div>

    <div class="col-lg-3">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Search</h6>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search messages...">
                </div>
                <button class="btn btn-outline-primary btn-sm w-100" onclick="searchMessages()">
                    <i class="fas fa-search"></i>
                    Search
                </button>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6 class="mb-0">Quick Stats</h6>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-6">Total:</dt>
                    <dd class="col-6" id="totalCount">-</dd>
                    
                    <dt class="col-6">Unread:</dt>
                    <dd class="col-6" id="unreadCount">-</dd>
                    
                    <dt class="col-6">Sent:</dt>
                    <dd class="col-6" id="sentCount">-</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<!-- Message View Modal -->
<div class="modal fade" id="messageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageSubject">Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="messageContent">
                    <div class="loading-spinner">
                        <i class="fas fa-spinner fa-spin me-2"></i>
                        Loading message...
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="deleteButton">
                    <i class="fas fa-trash"></i>
                    Delete
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-fidonet" id="replyButton">
                    <i class="fas fa-reply"></i>
                    Reply
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
window.systemAddress = '{{ system_address }}';
let currentPage = 1;
let currentFilter = 'all';
let currentMessageId = null;

$(document).ready(function() {
    loadMessages();
    loadStats();
    
    // Filter change handler
    $('input[name="filter"]').change(function() {
        currentFilter = $(this).val();
        currentPage = 1;
        loadMessages();
    });
    
    // Search on enter key
    $('#searchInput').on('keypress', function(e) {
        if (e.which === 13) {
            searchMessages();
        }
    });
    
    // Auto refresh every 2 minutes
    startAutoRefresh(function() {
        loadMessages();
        loadStats();
    }, 120000);
});

function loadMessages() {
    showLoading('#messagesContainer');
    
    let url = `/api/messages/netmail?page=${currentPage}`;
    if (currentFilter !== 'all') {
        url += `&filter=${currentFilter}`;
    }
    
    $.get(url)
        .done(function(data) {
            displayMessages(data.messages);
            updatePagination(data.pagination);
        })
        .fail(function() {
            $('#messagesContainer').html('<div class="text-center text-danger py-4">Failed to load messages</div>');
        });
}

function displayMessages(messages) {
    const container = $('#messagesContainer');
    let html = '';
    
    if (messages.length === 0) {
        html = '<div class="text-center text-muted py-4">No messages found</div>';
    } else {
        html = `
            <table class="table table-hover mb-0">
                <thead>
                    <tr>
                        <th width="5%"></th>
                        <th width="25%">From/To</th>
                        <th width="35%">Subject</th>
                        <th width="15%">Address</th>
                        <th width="15%">Received</th>
                        <th width="5%"></th>
                    </tr>
                </thead>
                <tbody>
        `;
        
        messages.forEach(function(msg) {
            const isUnread = !msg.is_read;
            const isSent = msg.is_sent || (msg.from_address && msg.from_address === window.systemAddress);
            const rowClass = isUnread ? 'table-light' : '';
            
            html += `
                <tr class="${rowClass} message-row" data-message-id="${msg.id}" onclick="viewMessage(${msg.id})" style="cursor: pointer;">
                    <td class="text-center">
                        ${isUnread ? '<i class="fas fa-envelope text-primary" title="Unread"></i>' : '<i class="far fa-envelope-open text-muted" title="Read"></i>'}
                    </td>
                    <td>
                        <strong>${escapeHtml(isSent ? 'To: ' + msg.to_name : msg.from_name)}</strong>
                        <br>
                        <small class="text-muted">${isSent ? 'Sent' : 'Received'}</small>
                    </td>
                    <td>
                        ${isUnread ? '<strong>' : ''}<span>${escapeHtml(msg.subject || '(No Subject)')}</span>${isUnread ? '</strong>' : ''}
                        <br>
                        <small class="text-muted">
                            <span class="badge bg-secondary">NETMAIL</span>
                            ${isUnread ? '<span class="badge bg-primary ms-1">NEW</span>' : ''}
                        </small>
                    </td>
                    <td>
                        <small class="text-muted font-monospace">${formatFidonetAddress(isSent ? msg.to_address : msg.from_address)}</small>
                    </td>
                    <td title="${formatFullDate(msg.date_written)}">
                        <small>${formatDate(msg.date_received)}</small>
                    </td>
                    <td class="text-center">
                        <button class="btn btn-outline-danger btn-sm" onclick="event.stopPropagation(); deleteMessage(${msg.id})" title="Delete message">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
        });
        
        html += `
                </tbody>
            </table>
        `;
    }
    
    container.html(html);
}

function updatePagination(pagination) {
    const container = $('#pagination');
    let html = '';
    
    if (pagination.pages > 1) {
        html = '<ul class="pagination pagination-sm mb-0">';
        
        // Previous button
        if (pagination.page > 1) {
            html += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${pagination.page - 1})">Previous</a></li>`;
        }
        
        // Page numbers
        for (let i = 1; i <= pagination.pages; i++) {
            const active = i === pagination.page ? 'active' : '';
            html += `<li class="page-item ${active}"><a class="page-link" href="#" onclick="changePage(${i})">${i}</a></li>`;
        }
        
        // Next button
        if (pagination.page < pagination.pages) {
            html += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${pagination.page + 1})">Next</a></li>`;
        }
        
        html += '</ul>';
    }
    
    container.html(html);
}

function changePage(page) {
    currentPage = page;
    loadMessages();
}

function viewMessage(messageId) {
    currentMessageId = messageId;
    
    $('#messageContent').html(`
        <div class="loading-spinner">
            <i class="fas fa-spinner fa-spin me-2"></i>
            Loading message...
        </div>
    `);
    
    $('#messageModal').modal('show');
    
    $.get(`/api/messages/netmail/${messageId}`)
        .done(function(data) {
            displayMessageContent(data);
        })
        .fail(function() {
            $('#messageContent').html('<div class="text-danger">Failed to load message</div>');
        });
}

function displayMessageContent(message) {
    const isSent = message.is_sent || (message.from_address && message.from_address === window.systemAddress);
    
    $('#messageSubject').text(message.subject || '(No Subject)');
    
    // Parse message to separate kludge lines from body
    const parsedMessage = parseNetmailMessage(message.message_text || '');
    
    const html = `
        <div class="message-header-full mb-3">
            <div class="row">
                <div class="col-md-6">
                    <strong>From:</strong> ${escapeHtml(message.from_name)}<br>
                    <small class="text-muted">${formatFidonetAddress(message.from_address)}</small>
                </div>
                <div class="col-md-6">
                    <strong>To:</strong> ${escapeHtml(message.to_name)}<br>
                    <small class="text-muted">${formatFidonetAddress(message.to_address)}</small>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-6">
                    <strong>Date:</strong> <span title="Sent: ${formatFullDate(message.date_written)}">${formatFullDate(message.date_received)}</span>
                </div>
                <div class="col-md-6">
                    <strong>Subject:</strong> ${escapeHtml(message.subject || '(No Subject)')}
                </div>
            </div>
        </div>
        
        ${parsedMessage.kludgeLines.length > 0 ? `
        <div class="message-headers mb-3">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="mb-0 text-muted">Message Headers</h6>
                <button class="btn btn-sm btn-outline-secondary" id="toggleHeaders" onclick="toggleKludgeLines()">
                    <i class="fas fa-eye-slash" id="toggleIcon"></i>
                    <span id="toggleText">Show Headers</span>
                </button>
            </div>
            <div id="kludgeContainer" class="kludge-lines" style="display: none;">
                <pre class="bg-dark text-light p-3 rounded small">${formatKludgeLines(parsedMessage.kludgeLines)}</pre>
            </div>
        </div>
        ` : ''}
        
        <div class="message-text">
            ${formatMessageText(parsedMessage.messageBody)}
        </div>
    `;
    
    $('#messageContent').html(html);
    
    // Set up reply button
    if (!isSent) {
        $('#replyButton').show().off('click').on('click', function() {
            $('#messageModal').modal('hide');
            composeMessage('netmail', currentMessageId);
        });
    } else {
        $('#replyButton').hide();
    }
    
    // Set up delete button
    $('#deleteButton').show().off('click').on('click', function() {
        deleteMessage(currentMessageId);
    });
}


function composeMessage(type, replyToId = null) {
    window.location.href = `/compose/netmail${replyToId ? '?reply=' + replyToId : ''}`;
}

function searchMessages() {
    const query = $('#searchInput').val().trim();
    if (query.length < 2) {
        showError('Please enter at least 2 characters to search');
        return;
    }
    
    showLoading('#messagesContainer');
    
    $.get(`/api/messages/search?q=${encodeURIComponent(query)}&type=netmail`)
        .done(function(data) {
            displayMessages(data.messages);
            $('#pagination').empty();
        })
        .fail(function() {
            showError('Search failed');
        });
}

function loadStats() {
    console.log('Loading netmail statistics...');
    $.get('/api/messages/netmail/stats')
        .done(function(data) {
            console.log('Netmail stats response:', data);
            $('#totalCount').text(data.total || 0);
            $('#unreadCount').text(data.unread || 0);
            $('#sentCount').text(data.sent || 0);
        })
        .fail(function(xhr, status, error) {
            console.error('Netmail stats loading failed:', xhr.status, status, error);
            console.error('Response text:', xhr.responseText);
            $('#totalCount').text('Error');
            $('#unreadCount').text('Error');
            $('#sentCount').text('Error');
        });
}

function deleteMessage(messageId) {
    if (!confirm('Are you sure you want to delete this message? This action cannot be undone.')) {
        return;
    }
    
    $.ajax({
        url: `/api/messages/netmail/${messageId}`,
        method: 'DELETE',
        success: function(data) {
            $('#messageModal').modal('hide');
            showSuccess('Message deleted successfully');
            loadMessages();
            loadStats();
        },
        error: function(xhr) {
            let errorMsg = 'Failed to delete message';
            if (xhr.responseJSON && xhr.responseJSON.error) {
                errorMsg = xhr.responseJSON.error;
            }
            showError(errorMsg);
        }
    });
}

// Mark message as read when viewed
function markMessageAsRead(messageId) {
    $.post(`/api/messages/netmail/${messageId}/read`)
        .done(function() {
            // Update the UI to show message as read
            const messageRow = $(`.message-row[data-message-id="${messageId}"]`);
            if (messageRow.length) {
                messageRow.removeClass('table-light');
                // Change envelope icon from closed to open
                messageRow.find('.fa-envelope').removeClass('fas fa-envelope text-primary').addClass('far fa-envelope-open text-muted');
                // Remove bold formatting from subject
                messageRow.find('strong').contents().unwrap();
                // Update title attribute
                messageRow.find('.fa-envelope-open').attr('title', 'Read');
                // Reduce opacity slightly to show as read
                messageRow.css('opacity', '0.85');
            }
        })
        .fail(function() {
            console.log('Failed to mark netmail as read');
        });
}

// Override viewMessage function to mark as read
function viewMessage(messageId) {
    currentMessageId = messageId;
    
    // Mark as read immediately
    markMessageAsRead(messageId);
    
    $('#messageContent').html(`
        <div class="loading-spinner">
            <i class="fas fa-spinner fa-spin me-2"></i>
            Loading message...
        </div>
    `);
    
    $('#messageModal').modal('show');
    
    $.get(`/api/messages/netmail/${messageId}`)
        .done(function(data) {
            displayMessageContent(data);
        })
        .fail(function() {
            $('#messageContent').html('<div class="text-danger">Failed to load message</div>');
        });
}
</script>

<style>
/* Read/Unread message styling */
.message-row.table-light {
    background-color: #f8f9fa;
}

.message-row.table-light strong {
    font-weight: 600;
}

.message-row:not(.table-light) {
    opacity: 0.85;
}

.message-row:hover {
    background-color: #e9ecef;
    opacity: 1 !important;
}
</style>
{% endblock %}