{% extends "base.twig" %}

{% block title %}Compose {{ type|title }} - {{ parent() }}{% endblock %}


{% block content %}
<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-{{ type == 'netmail' ? 'envelope' : 'comments' }}"></i>
        Compose {{ type|title }}
    </h2>
    <a href="/{{ type }}" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i>
        Back to {{ type|title }}
    </a>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="compose-form">
            <form id="composeForm">
                <input type="hidden" id="messageType" value="{{ type }}">
                <input type="hidden" id="replyToId" value="{{ reply_to_id }}">
                
                {% if type == 'netmail' %}
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="toAddress" class="form-label">To Address *</label>
                            <input type="text" class="form-control" id="toAddress" name="to_address" 
                                   placeholder="1:123/456" value="{{ reply_to_address }}" required>
                            <div class="form-text">Fidonet address (e.g., 1:123/456)</div>
                        </div>
                        <div class="col-md-6">
                            <label for="toName" class="form-label">To Name *</label>
                            <input type="text" class="form-control" id="toName" name="to_name" 
                                   value="{{ to_name_value }}" required>
                        </div>
                    </div>
                {% else %}
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="echoarea" class="form-label">Echo Area *</label>
                            <select class="form-select" id="echoarea" name="echoarea" required>
                                <option value="">Select echo area...</option>
                                <!-- Options will be loaded via AJAX -->
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="toName" class="form-label">To Name</label>
                            <input type="text" class="form-control" id="toName" name="to_name" 
                                   value="{{ to_name_value }}" placeholder="All">
                            <div class="form-text">Leave as 'All' for public message</div>
                        </div>
                    </div>
                {% endif %}
                
                <div class="mb-3">
                    <label for="subject" class="form-label">Subject *</label>
                    <input type="text" class="form-control" id="subject" name="subject" 
                           value="{{ reply_subject }}" required>
                </div>
                
                <div class="mb-3">
                    <label for="messageText" class="form-label">Message *</label>
                    <textarea class="form-control" id="messageText" name="message_text" 
                              rows="15" required>{{ reply_text }}</textarea>
                    <div class="form-text">
                        Use plain text. Fidonet standard formatting applies.
                    </div>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="history.back()">
                        <i class="fas fa-times"></i>
                        Cancel
                    </button>
                    <div>
                        <button type="button" class="btn btn-outline-primary" onclick="saveDraft()">
                            <i class="fas fa-save"></i>
                            Save Draft
                        </button>
                        <button type="submit" class="btn btn-fidonet">
                            <i class="fas fa-paper-plane"></i>
                            Send {{ type|title }}
                        </button>
                    </div>
                </div>
            </form>
            
            <div id="sendStatus" class="mt-3" style="display: none;"></div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Message Guidelines</h6>
            </div>
            <div class="card-body">
                {% if type == 'netmail' %}
                    <h6>Netmail Guidelines:</h6>
                    <ul class="small">
                        <li>Private messages between nodes</li>
                        <li>Use proper Fidonet addressing</li>
                        <li>Be respectful and professional</li>
                        <li>Messages are routed through the network</li>
                    </ul>
                {% else %}
                    <h6>Echomail Guidelines:</h6>
                    <ul class="small">
                        <li>Public forum messages</li>
                        <li>Stay on-topic for the echo area</li>
                        <li>Be respectful to all participants</li>
                        <li>Follow the echo rules and moderation</li>
                    </ul>
                {% endif %}
                
                <h6 class="mt-3">Technical Notes:</h6>
                <ul class="small">
                    <li>Plain text only (no HTML)</li>
                    <li>Lines should be â‰¤ 79 characters</li>
                    <li>Use --- for signature separator</li>
                    <li>Origin line added automatically</li>
                </ul>
            </div>
        </div>

        
        <div class="card mt-3">
            <div class="card-header">
                <h6 class="mb-0">Your Info</h6>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-4">Name:</dt>
                    <dd class="col-8">{{ user_name }}</dd>
                    
                    <dt class="col-4">System:</dt>
                    <dd class="col-8">{{ system_name_display }}</dd>
                    
                    <dt class="col-4">Address:</dt>
                    <dd class="col-8">{{ system_address_display }}</dd>
                </dl>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
$(document).ready(function() {
    const messageType = $('#messageType').val();
    const replyToId = $('#replyToId').val();
    
    // Load font settings for textarea
    loadFontSettings();
    
    // Load echo areas for echomail
    if (messageType === 'echomail') {
        loadEchoareas();
    }
    
    
    // Form submit handler
    $('#composeForm').on('submit', function(e) {
        e.preventDefault();
        sendMessage();
    });
    
    // Address validation for netmail
    if (messageType === 'netmail') {
        $('#toAddress').on('blur', function() {
            validateFidonetAddressField(this);
        });
    }
    
    // Auto-save draft every 2 minutes
    setInterval(function() {
        saveDraft(true); // Silent save
    }, 120000);
});

function loadEchoareas() {
    $.get('/api/echoareas')
        .done(function(data) {
            const select = $('#echoarea');
            select.empty().append('<option value="">Select echo area...</option>');
            
            if (data.echoareas) {
                data.echoareas.forEach(function(area) {
                    const colorDot = `<span style="display:inline-block; width:12px; height:12px; border-radius:50%; background-color:${area.color || '#28a745'}; margin-right:8px; vertical-align:middle;"></span>`;
                    select.append(`<option value="${area.tag}" data-color="${area.color || '#28a745'}">${area.tag} - ${area.description}</option>`);
                });
                
                // Add color styling to select options
                select.on('change', function() {
                    const selectedOption = $(this).find('option:selected');
                    const color = selectedOption.data('color');
                    if (color) {
                        $(this).css('border-left', `4px solid ${color}`);
                    }
                });
            }
            
            // Pre-select if specified in URL or template
            const urlParams = new URLSearchParams(window.location.search);
            const preselect = urlParams.get('echoarea') || '{{ echoarea }}';
            if (preselect) {
                select.val(preselect);
            }
        });
}


function validateFidonetAddressField(field) {
    const address = $(field).val().trim();
    if (address && !validateFidonetAddress(address)) {
        $(field).addClass('is-invalid');
        if (!$(field).next('.invalid-feedback').length) {
            $(field).after('<div class="invalid-feedback">Invalid Fidonet address format (e.g., 1:123/456)</div>');
        }
        return false;
    } else {
        $(field).removeClass('is-invalid');
        $(field).next('.invalid-feedback').remove();
        return true;
    }
}

function sendMessage() {
    const messageType = $('#messageType').val();
    const form = $('#composeForm');
    
    // Validate form
    if (!form[0].checkValidity()) {
        form[0].reportValidity();
        return;
    }
    
    // Additional validation for netmail
    if (messageType === 'netmail') {
        if (!validateFidonetAddressField('#toAddress')) {
            return;
        }
    }
    
    const formData = {
        type: messageType,
        to_address: $('#toAddress').val(),
        to_name: $('#toName').val(),
        echoarea: $('#echoarea').val(),
        subject: $('#subject').val(),
        message_text: $('#messageText').val(),
        reply_to_id: $('#replyToId').val() || null
    };
    
    // Show sending status
    $('#sendStatus').show().html(`
        <div class="alert alert-info">
            <i class="fas fa-spinner fa-spin me-2"></i>
            Sending ${messageType}...
        </div>
    `);
    
    // Disable form
    form.find('input, textarea, select, button').prop('disabled', true);
    
    $.ajax({
        url: `/api/messages/send`,
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: function(response) {
            $('#sendStatus').html(`
                <div class="alert alert-success">
                    <i class="fas fa-check me-2"></i>
                    ${messageType.charAt(0).toUpperCase() + messageType.slice(1)} sent successfully!
                </div>
            `);
            
            setTimeout(function() {
                window.location.href = `/${messageType}`;
            }, 2000);
        },
        error: function(xhr) {
            const error = xhr.responseJSON ? xhr.responseJSON.error : `Failed to send ${messageType}`;
            $('#sendStatus').html(`
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    ${escapeHtml(error)}
                </div>
            `);
            
            // Re-enable form
            form.find('input, textarea, select, button').prop('disabled', false);
        }
    });
}

function saveDraft(silent = false) {
    const formData = {
        type: $('#messageType').val(),
        to_address: $('#toAddress').val(),
        to_name: $('#toName').val(),
        echoarea: $('#echoarea').val(),
        subject: $('#subject').val(),
        message_text: $('#messageText').val(),
        reply_to_id: $('#replyToId').val() || null
    };
    
    // Only save if there's actual content
    if (!formData.subject.trim() && !formData.message_text.trim()) {
        return;
    }
    
    $.ajax({
        url: '/api/messages/draft',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: function(response) {
            if (!silent) {
                showSuccess('Draft saved successfully');
            }
        },
        error: function() {
            if (!silent) {
                showError('Failed to save draft');
            }
        }
    });
}

function loadFontSettings() {
    $.get('/api/user/settings')
        .done(function(data) {
            const fontFamily = data.font_family || 'Courier New, Monaco, Consolas, monospace';
            const fontSize = data.font_size || 16;
            
            // Apply font settings to message textarea
            const css = `
                #messageText {
                    font-family: ${fontFamily} !important;
                    font-size: ${fontSize}px !important;
                }
            `;
            
            // Remove existing font style if any
            $('#compose-font-styles').remove();
            
            // Add new font styles
            $('<style id="compose-font-styles">' + css + '</style>').appendTo('head');
        })
        .fail(function() {
            console.log('Failed to load font settings, using defaults');
        });
}
</script>
{% endblock %}